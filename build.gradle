plugins {
    id 'com.palantir.docker' version '0.25.0' apply false
}

subprojects {
    apply plugin: 'base'
    apply plugin: 'com.palantir.docker'

    ext {
        sharedDir                     = file("${project.rootDir}/shared")
        baseSailfishVersion           = '3.3'
        sailfishVersion               = "${baseSailfishVersion}.51"

        pluginMainDir                 = file('src/main/plugin')
        pluginGenDir                  = file('src/gen/plugin')
        versionFile                   = file("${pluginGenDir}/VERSION")
        dockerSailfishWorkspaceDir    = 'sailfish/workspace/plugins/th2_service'
        dockerSailfishWorkspaceLibDir = "${dockerSailfishWorkspaceDir}/libs"
    }

    repositories {
        maven {
            name 'MavenLocal'
            url sharedDir
        }
        mavenCentral()
        maven {
            name 'Sonatype_snapshots'
            url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        }
        maven {
            name 'Sonatype_releases'
            url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        }
        mavenLocal()

        configurations.all {
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
            resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        }
    }

    configurations {
        service
    }

    dependencies {
        service ("com.exactpro.sf:${sf_service_name}:${sailfishVersion}") {
            exclude module: 'sailfish-core'
            exclude module: 'sailfish-common'
        }
    }

    task pluginWriteVersion {
        outputs.file versionFile
        doLast{
            versionFile.write "lightweight: true\n" +
                              "plugin_alias: th2_service\n" +
                              "name: th2_service\n" +
                              "build_number: 0\n" +
                              "revision: 0\n" +
                              "git_hash: 0\n" +
                              "branch: fake\n" +
                              "version: ${baseSailfishVersion}.0.0\n" +
                              "core_version: ${baseSailfishVersion}.0"
        }
    }

    dockerPrepare {
        dependsOn pluginWriteVersion
    }

    docker {
        copySpec.with {
            from(configurations.service) {
                into dockerSailfishWorkspaceLibDir
            }
            from(pluginMainDir) {
                into dockerSailfishWorkspaceDir
            }
            from(pluginGenDir) {
                into dockerSailfishWorkspaceDir
            }
        }
    }

    clean {
        delete(pluginGenDir)
    }
}
